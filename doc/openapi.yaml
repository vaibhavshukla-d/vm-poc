openapi: 3.0.0
info:
  description: Virtualization API
  license:
    name: HPE End User License Agreement
    url: https://www.hpe.com/us/en/software/licensing.html
  title: Virtualization API
  version: 1.2.0
servers:
  - url: https://us-west.api.greenlake.hpe.com
  - url: https://eu-west.api.greenlake.hpe.com
  - url: https://eu-central.api.greenlake.hpe.com
  - url: https://ap-northeast.api.greenlake.hpe.com
security:
  - bearer: []
tags:
  - description: >-
      The virtual machines API allows the registration and management of virtual
      machines.
    name: virtual-machines
paths:
  /virtualization/v1beta1/virtual-machines:
    post:
      description: >
        Deploys one or more virtual machines in HCI environment with specified
        template and storage provisioning policy.
      operationId: HCIDeployVM
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/HCIDeployVM"
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EmptyResponse"
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Unauthorized request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Internal / unexpected error
      summary: Deploy virtual machine
      tags:
        - virtual-machines
  /virtualization/v1beta1/virtual-machines/{vm-id}:
    delete:
      description: Delete a virtual machine
      operationId: VMDelete
      parameters:
        - in: path
          name: vm-id
          required: true
          schema:
            $ref: "#/components/schemas/VirtualMachine/properties/id"
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EmptyResponse"
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Unauthorized request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Internal / unexpected error
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Appliance in maintenance mode
      summary: Delete a virtual machine
      tags:
        - virtual-machines
  /virtualization/v1beta1/virtual-machines/{vm-id}/power-off:
    post:
      description: Power off a virtual machine
      operationId: VMPowerOff
      parameters:
        - in: path
          name: vm-id
          required: true
          schema:
            $ref: "#/components/schemas/VirtualMachine/properties/id"
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EmptyResponse"
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Unauthorized request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Internal / unexpected error
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Appliance in maintenance mode
      summary: Power off a virtual machine
      tags:
        - virtual-machines
  /virtualization/v1beta1/virtual-machines/{vm-id}/power-on:
    post:
      description: Power on a virtual machine
      operationId: VMPowerOn
      parameters:
        - in: path
          name: vm-id
          required: true
          schema:
            $ref: "#/components/schemas/VirtualMachine/properties/id"
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EmptyResponse"
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Unauthorized request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Internal / unexpected error
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Appliance in maintenance mode
      summary: Power on a virtual machine
      tags:
        - virtual-machines
  /virtualization/v1beta1/virtual-machines/{vm-id}/refresh:
    post:
      description: Updates the properties of the specified virtual machine instance
      operationId: VMRefresh
      parameters:
        - in: path
          name: vm-id
          required: true
          schema:
            $ref: "#/components/schemas/VirtualMachine/properties/id"
      responses:
        "202":
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/EmptyResponse"
          description: Request accepted
          headers:
            Location:
              schema:
                type: string
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Unauthenticated request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Unauthorized request
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: A virtual machine instance with the given ID was not found.
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: >-
            A refresh action cannot be initiated in the current state of the
            cloud account.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: An unexpected error occurred.
      summary: Refresh the specified virtual machine instance
      tags:
        - virtual-machines
  /virtualization/v1beta1/virtual-machines/{vm-id}/reset:
    post:
      description: Reset a virtual machine
      operationId: VMPowerReset
      parameters:
        - in: path
          name: vm-id
          required: true
          schema:
            $ref: "#/components/schemas/VirtualMachine/properties/id"
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EmptyResponse"
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Unauthorized request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Internal / unexpected error
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Appliance in maintenance mode
      summary: Reset a virtual machine
      tags:
        - virtual-machines
  /virtualization/v1beta1/virtual-machines/{vm-id}/restart-guest-os:
    post:
      description: Restart guest OS of a virtual machine
      operationId: VMRestartGuestOS
      parameters:
        - in: path
          name: vm-id
          required: true
          schema:
            $ref: "#/components/schemas/VirtualMachine/properties/id"
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EmptyResponse"
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Unauthorized request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Internal / unexpected error
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Appliance in maintenance mode
      summary: Restart guest OS of a virtual machine
      tags:
        - virtual-machines
  /virtualization/v1beta1/virtual-machines/{vm-id}/shutdown-guest-os:
    post:
      description: Shutdown guest OS of a virtual machine
      operationId: VMShutdownGuestOS
      parameters:
        - in: path
          name: vm-id
          required: true
          schema:
            $ref: "#/components/schemas/VirtualMachine/properties/id"
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EmptyResponse"
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Unauthorized request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Internal / unexpected error
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Appliance in maintenance mode
      summary: Shutdown guest OS of a virtual machine
      tags:
        - virtual-machines
  /virtualization/v1beta1/virtual-machines/{vm-id}/update-hardware:
    post:
      description: >-
        Updates CPU, memory, network adapters, and disks of a virtual machine.
        This operation can be performed when the virtual machine is powered off.
      operationId: EditVM
      parameters:
        - in: path
          name: vm-id
          required: true
          schema:
            $ref: "#/components/schemas/VirtualMachine/properties/id"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EditVM"
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EmptyResponse"
          description: Accepted
          headers:
            Location:
              description: >-
                Async-operations URI that can be used to monitor the progress of
                the operation.
              schema:
                type: string
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Unauthorized request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Internal / unexpected error
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Service unavailable
      summary: Reconfigure virtual machine hardware configurations
      tags:
        - virtual-machines
  /virtualization/v1beta1/virtual-machines-request/{request-id}:
    get:
      description: Details of a virtual machine request
      operationId: GetVirtualMachineRequest
      parameters:
        - in: path
          name: request-id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VMRequestWithDeploy"
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Unauthorized request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Resource not found
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Internal / unexpected error
      summary: Get a virtual machine request identified by {request-id}
      tags:
        - virtual-machine-request
  /virtualization/v1beta1/virtual-machines-request:
    get:
      description: Details of a virtual machine request
      operationId: GetVirtualMachineRequestList
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VMRequestsList"
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Unauthorized request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Resource not found
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Internal / unexpected error
      summary: Get all virtual machine requests
      tags:
        - virtual-machine-requests
components:
  schemas:
    CommonResourceProperties:
      description: Common properties included in all resource models.
      properties:
        createdAt:
          format: date-time
          type: string
        customerId:
          description: The customer application identifier
          readOnly: true
          type: string
        generation:
          description: >-
            A monotonically increasing value. This value updates when the
            resource is updated and can be used as a short way to determine if a
            resource has changed or which of two different copies of a resource
            is more up to date.
          format: int64
          readOnly: true
          type: integer
        id:
          description: An identifier for the resource, usually a UUID.
          format: uuid
          readOnly: true
          type: string
        name:
          description: A system specified name for the resource.
          type: string
        resourceUri:
          description: The self reference for this resource.
          readOnly: true
          type: string
        type:
          description: The type of resource.
          readOnly: true
          type: string
        updatedAt:
          format: date-time
          type: string
      required:
        - id
        - type
        - generation
        - createdAt
        - updatedAt
        - resourceUri
        - customerId
      type: object
    DataManagementJobInfo:
      description: Information about the assigned Protection Policy and the Protection Job.
      properties:
        id:
          description: UUID string uniquely identifying the Protection Job.
          example: c9cdeb6b-24cb-43c1-828a-e8b1b050f3f4
          format: uuid
          type: string
        name:
          description: name of the Protection Job.
          type: string
        protectionPolicyInfo:
          $ref: "#/components/schemas/DataManagementTemplateInfo"
        resourceUri:
          description: Reference to resource.
          type: string
        type:
          $ref: "#/components/schemas/CommonResourceProperties/properties/type"
      type: object
    DataManagementTemplateInfo:
      description: |
        Information about the Protection Policy that was used to create the job.
      properties:
        id:
          description: UUID string uniquely identifying the Protection Policy.
          example: c9cdeb6b-24cb-43c1-828a-e8b1b050f3f4
          format: uuid
          type: string
        name:
          description: User defined name of the Protection Policy.
          example: Gold-Protection-Policy
          type: string
        resourceUri:
          description: Reference to resource
          readOnly: true
          type: string
        type:
          $ref: "#/components/schemas/CommonResourceProperties/properties/type"
      type: object
    DatacenterInfo:
      description: References to the datacenter that house this virtual machine.
      properties:
        id:
          description: UUID string uniquely identifier of the datacenter.
          example: 16245bf7-2b35-5580-86a6-620faa5b5403
          type: string
        moref:
          description: VMware provided moref for the datacenter.
          example: datacenter-2
          type: string
        name:
          description: VMware provided name for the datacenter.
          example: core-team-dc
          type: string
      type: object
    EditVM:
      description: >-
        Reconfigure virtual machine hardware settings - CPU, memory, network
        adapters, and disks
      properties:
        cpuMemConfig:
          description: Reconfigure CPU and memory values for a virtual machine
          properties:
            cpu:
              description: Reconfigure CPU values for a virtual machine
              properties:
                numOfCoresPerSocket:
                  description: >-
                    The number of CPU cores per socket in the virtual machine.
                    The number of CPU cores in the virtual machine must be a
                    multiple of the number of cores per socket.
                  example: 7
                  type: integer
                numOfCpus:
                  description: >-
                    The number of CPU cores in the virtual machine. The
                    supported range of CPU depends on guest operating system and
                    virtual hardware version of the virtual machine.
                  example: 35
                  type: integer
              type: object
            memory:
              description: >-
                Reconfigure memory for a virtual machine. The supported range of
                memory depends on guest operating system and virtual hardware
                version of the virtual machine.
              properties:
                memoryInMb:
                  description: New memory size in mebibytes.
                  example: 2048
                  type: integer
              type: object
        networkAdapters:
          description: >-
            Reconfigure network adapter(s) for a virtual machine.
            ADD/EDIT/DELETE list of network adapters.
          items:
            properties:
              connectAtPowerOn:
                default: true
                description: >-
                  Specifies if the network adapter has to be connected to
                  virtual machine on power on.
                example: true
                type: boolean
              name:
                description: >-
                  Name of the network adapter. Mandatory parameter for EDIT and
                  DELETE operation. Name for the network adapter will be
                  auto-generated by hypervisor-manager during ADD operation.
                type: string
              networkDetails:
                description: >-
                  Backing network information. Mandatory parameter for ADD and
                  EDIT operation.
                properties:
                  name:
                    description: >-
                      Name of the backing network. Mandatory parameter for ADD
                      and EDIT operation.
                    example: VM Network
                    type: string
                  type:
                    default: STANDARD_PORT_GROUP
                    description: Type of the backing network.
                    enum:
                      - STANDARD_PORT_GROUP
                    example: STANDARD_PORT_GROUP
                    type: string
                type: object
              operation:
                description: Operation to be performed on a network adapter.
                enum:
                  - ADD
                  - EDIT
                  - DELETE
                example: ADD
                type: string
              type:
                description: >-
                  Type of the network adapter. Mandatory parameter for ADD
                  operation.
                enum:
                  - E1000
                  - E1000E
                  - PCNET32
                  - VMXNET
                  - VMXNET2
                  - VMXNET3
                example: VMXNET2
                type: string
            type: object
          type: array
        virtualDisks:
          description: >-
            Reconfigure disk(s) for a virtual machine. ADD/EDIT/DELETE list of
            disks.
          items:
            properties:
              diskConfig:
                description: Configurations for a disk
                properties:
                  capacityInMb:
                    description: >-
                      Size of the disk in mebibytes. Mandatory parameter for ADD
                      and EDIT operation.
                    example: 2048
                    type: integer
                  id:
                    description: >-
                      The UUID of the disk. Mandatory parameter for EDIT and
                      DELETE operation.
                    example: 26863c35-916e-5d00-8673-b81c48c07783
                    type: string
                  retainFiles:
                    description: >-
                      Specifies if the backing files of the disk need to be
                      retained after disk deletion. Mandatory parameter for
                      DELETE operation.
                    example: true
                    type: boolean
                  type:
                    description: The type of the disk.
                    enum:
                      - IDE
                      - SCSI
                      - SATA
                      - NVME
                    example: SATA
                    type: string
                type: object
              operation:
                description: >-
                  Operation to be performed on a disk. Minimum size required to 
                  add a disk is 1MB. Maximum capacity for a disk depends on the
                  backing storage.
                enum:
                  - ADD
                  - EDIT
                  - DELETE
                example: ADD
                type: string
            type: object
          type: array
      type: object
    EmptyResponse:
      type: object
    ErrorResponse:
      type: object
      properties:
        debugId:
          description: A unique identifier for the request
          example: f57dcca3345820eb579c9317ce36dd92
          type: string
        errorCode:
          description: A machine friendly identifier for the error response
          type: string
        httpStatusCode:
          description: The HTTP status code of the response
          type: integer
        message:
          description: A user-friendly error message
          example: An example error message
          type: string
      required:
        - httpStatusCode
        - message
        - errorCode
        - debugId
    HCIDeployVM:
      description: >-
        Deploys one or more virtual machines using specified template and
        storage provisioning policy.
      properties:
        destination:
          description: Specifies where to deploy the virtual machine
          properties:
            clusterId:
              description: >-
                The UUID of the hypervisor cluster where the virtual machine can
                be deployed
              type: string
            folderId:
              description: >-
                The UUID of the hypervisor folder where the virtual machine can
                be deployed
              type: string
            hostId:
              description: >-
                The UUID of the hypervisor host where the virtual machine can be
                deployed
              type: string
            resourcePoolId:
              description: >-
                The UUID of the hypervisor resource pool where the virtual
                machine can be deployed
              type: string
          type: object
        imageSource:
          description: >-
            Specifies the hypervisor image information using which the virtual
            machine is deployed
          properties:
            imageId:
              description: >-
                The UUID of the hypervisor image using which a virtual machine
                is deployed
              type: string
            imageName:
              description: >-
                The name of the hypervisor image using which a virtual machine
                is deployed
              type: string
            imageSourceType:
              default: HYPERVISOR_IMAGE_LIBRARY
              description: The source of the image where it was hosted
              enum:
                - HYPERVISOR_IMAGE_LIBRARY
              example: HYPERVISOR_IMAGE_LIBRARY
              type: string
          type: object
        networkConfig:
          description: Specifies name and the target network to use for deployment
          properties:
            ipAllocationPolicy:
              description: >-
                Specifies whether IP addresses are allocated by DHCP or static
                address
              enum:
                - DHCP_POLICY
                - FIXED_POLICY
              type: string
            networkMapping:
              description: Specifies name and the target network to be used for deployment
              items:
                properties:
                  name:
                    description: Identifier for the network mapping
                    type: string
                  network:
                    description: Target network to be used for deployment
                    type: string
                type: object
              type: array
          type: object
        storageConfig:
          description: Specifies the storage configurations for a virtual machine
          properties:
            defaultDatastoreId:
              description: >-
                The UUID of the hypervisor datastore where the virtual machine
                is to be deployed
              type: string
            provisioningType:
              description: >-
                Specifies whether datastore is THIN or THICK to provision the
                virtual machine
              enum:
                - THIN
                - THICK
              type: string
          required:
            - defaultDatastoreId
          type: object
        vmConfig:
          description: Defines the virtual machine configurations
          properties:
            acceptEula:
              description: Accept EULA by default or not
              type: boolean
            annotation:
              description: The description of the image
              type: string
            locale:
              description: Locale to use for parsing OVF descriptor
              type: string
            name:
              description: Name of the virtual machine to be deployed
              type: string
            numberOfVms:
              default: 1
              description: Number of virtual machines to be created.
              type: integer
            powerOn:
              description: Power on/off the virtual machine
              type: boolean
            propertyConfig:
              description: >-
                Properties which can be set to a virtual machine during
                deployment
              items:
                properties:
                  key:
                    description: Name of the property to be set to the virtual machine
                    type: string
                  value:
                    description: Value of the property to be set to the virtual machine
                    type: string
                type: object
              type: array
          required:
            - name
            - acceptEula
          type: object
        vmPolicy:
          description: Specifies the policies which can be attached to the virtual machine
          items:
            properties:
              id:
                description: The UUID of the policy
                type: string
              type:
                description: >-
                  Type of the policy which needs to be attached to the virtual
                  machine
                enum:
                  - VM_PROTECTION_POLICY
                  - VM_PROVISIONING_POLICY
                type: string
            type: object
          type: array
      required:
        - vmConfig
        - storageConfig
      type: object
    ProtectionPolicyAppliedAtInfo:
      description: Describes applied protection policy information.
      properties:
        id:
          description: UUID string uniquely identifying the protection policy.
          example: 6a38acc7-e470-4ed7-b141-ca9509672dac
          type: string
        name:
          description: Name of the protection policy.
          example: ProtectionPolicy1
          type: string
        resourceUri:
          description: The URI reference for this resource.
          type: string
        type:
          description: Type of the protection policy.
          enum:
            - DATASTORE
            - VIRTUAL_MACHINE
            - VM_PROTECTION_GROUP
          example: DATASTORE
          type: string
      type: object
    StorageFolderInfo:
      description: Information of storage folder.
      properties:
        displayName:
          description: A user-friendly name that identifies the storage folder.
          type: string
        id:
          description: UUID string uniquely identifying the storage folder.
          example: 6a38acc7-e470-4ed7-b141-ca9509672dac
          type: string
        name:
          description: Name of the storage folder.
          type: string
        resourceUri:
          description: The URI reference for this resource.
          type: string
        type:
          description: Type of storage folder.
          type: string
      type: object
    StoragePoolInfo:
      description: Describes a storage pool.
      properties:
        displayName:
          description: A user-friendly name that identifies the storage pool.
          type: string
        id:
          description: UUID string uniquely identifying the storage pool.
          example: 6a38acc7-e470-4ed7-b141-ca9509672dac
          type: string
        name:
          description: Name of the storage pool.
          type: string
        resourceUri:
          description: The URI reference for this resource.
          type: string
        type:
          description: Type of storage pool.
          type: string
      type: object
    StorageSystemInfo:
      description: Describes a storage system.
      properties:
        displayName:
          description: A user-friendly name that identifies the storage system.
          example: my-dev-3par1.ind.hpecorp.net
          type: string
        id:
          description: UUID string uniquely identifying the storage system.
          example: 6a38acc7-e470-4ed7-b141-ca9509672dac
          type: string
        managed:
          description: Specify if the storage system is registered.
          type: boolean
        name:
          description: Name of the storage system.
          example: atlas-dev-3par1.ind.hpecorp.net
          type: string
        resourceUri:
          description: The URI reference for this resource.
          type: string
        serialNumber:
          description: Serial number of the storage system.
          example: AF-10122
          type: string
        type:
          description: Type of storage system.
          enum:
            - NIMBLE
            - THREEPAR
            - PRIMERA
            - ALLETRA_6000
            - ALLETRA_9000
          example: ALLETRA_9000
          type: string
        vendorName:
          description: Storage system provider name.
          example: hpe
          maxLength: 255
          type: string
      type: object
    Services:
      description: >-
        List of services this object belongs to.  This list can be used to
        filter specific services in the UI.
      example:
        - hci-manager
        - backup-and-recovery
      items:
        description: External name of the service.
        type: string
      type: array
    VirtualMachine:
      description: |
        Represents a single instance of a Virtual Machine
      properties:
        allowedOperations:
          description: List of allowed operation on the virtual machine.
          example:
            - VIRTUAL_MACHINE_POWER_ON
            - VIRTUAL_MACHINE_POWER_OFF
          items:
            enum:
              - VIRTUAL_MACHINE_POWER_ON
              - VIRTUAL_MACHINE_POWER_OFF
              - VIRTUAL_MACHINE_RESET
              - VIRTUAL_MACHINE_SHUTDOWN_GUEST_OS
              - VIRTUAL_MACHINE_RESTART_GUEST_OS
              - VIRTUAL_MACHINE_DELETE
            type: string
          type: array
        appInfo:
          description: Application specific information for this virtual machine.
          properties:
            vmware:
              properties:
                datacenterInfo:
                  $ref: "#/components/schemas/DatacenterInfo"
                datastoresInfo:
                  description: >-
                    References to all datastores that house virtual disks of
                    this virtual machine.
                  items:
                    properties:
                      displayName:
                        description: A user-friendly name that identifies the datastore.
                        example: Nimble-DS1
                        type: string
                      id:
                        description: UUID string uniquely identifying the datastore
                        example: 9b4c14a6-3cd5-4907-97c4-cf44c5b641e4
                        type: string
                      name:
                        description: Name of the datastore as reported by the hypervisor manager.
                        example: Nimble-DS2
                        format: hostname
                        maxLength: 255
                        readOnly: true
                        type: string
                      resourceUri:
                        description: The URI reference for this resource.
                        type: string
                      type:
                        $ref: "#/components/schemas/CommonResourceProperties/properties/type"
                    type: object
                  type: array
                moref:
                  description: VMware provided moref for this virtual machine.
                  example: vm-21
                  type: string
                resourcePoolInfo:
                  description: >-
                    Information about the VMware's resource pool to which the VM
                    belongs to.
                  properties:
                    displayName:
                      description: >-
                        A user-friendly name that identifies the hypervisor resource pool.
                        This will always be same as name since adding or updating hypervisor
                        resource pools is not supported when managed from a manager, such as
                        the vCenter.
                      example: resourcePool1
                      type: string
                    id:
                      description: >-
                        UUID string uniquely identifying the hypervisor resource pool
                        resource.
                      example: 9b4c14a6-3cd5-4907-97c4-cf44c5b641e4
                      type: string
                    moref:
                      description: VMware provided moref for this resource pool.
                      example: resourcepool-1
                      type: string
                    name:
                      description: Name of the resource pool as reported by the hypervisor manager.
                      example: resourcePool1
                      maxLength: 255
                      readOnly: true
                      type: string
                    resourceUri:
                      description: The URI reference for this resource.
                      type: string
                    type:
                      $ref: >-
                        #/components/schemas/CommonResourceProperties/properties/type
                  type: object
                toolsInfo:
                  description: >-
                    Information about the VMware tools installed in this virtual
                    machine.
                  properties:
                    status:
                      description: >-
                        Status of VMware Tools running in the guest operating
                        system. Values are inline with the vCenter provided
                        values
                      enum:
                        - NOT_INSTALLED
                        - NOT_RUNNING
                        - OK
                        - OLD
                      type: string
                    type:
                      description: >-
                        Type of the VMware tool installed in this virtual
                        machine.
                      example: guestToolsTypeMSI
                      type: string
                    version:
                      description: >-
                        Version of the VMware tool installed in this virtual
                        machine.
                      example: "9349"
                      type: string
                  type: object
                type:
                  description: >-
                    Type of the virtual machine. - VMFS - virtual machine which
                    is created from one or more VMFS datastores. - VVOL -
                    virtual machine which is created from a VVOL datastores. -
                    NFS  - virtual machine which is created from a NFS
                    datastores. - VSAN - virtual machine which is created from a
                    VSAN datastores.
                  enum:
                    - VMFS
                    - VVOL
                    - NFS
                    - VSAN
                  type: string
              type: object
          type: object
        appType:
          description: Type of the application to which the VM belongs.
          enum:
            - VMWARE
          type: string
        capacityInBytes:
          description: Size of the virtual machine in bytes.
          example: 2407653459860
          format: int64
          type: integer
        clusterInfo:
          properties:
            displayName:
              description: >-
                A user-friendly name that identifies the hypervisor cluster. This
                will always be same as name since adding or updating hypervisor
                clusters is not supported when managed from a manager, such as the
                vCenter.
              example: myesxcluster1
              type: string
            id:
              description: UUID string uniquely identifying the hypervisor cluster.
              example: 9b4c14a6-3cd5-4907-97c4-cf44c5b641e4
              type: string
            name:
              description: Name of the cluster as reported by the hypervisor manager.
              example: myesxcluster1
              format: hostname
              maxLength: 255
              readOnly: true
              type: string
            resourceUri:
              description: The URI reference for this resource.
              type: string
            type:
              $ref: "#/components/schemas/CommonResourceProperties/properties/type"
          type: object
        computeInfo:
          description: Compute information of the virtual machine.
          properties:
            memorySizeInMib:
              description: Total memory provisioned.
              example: "4096"
              type: string
            numCpuCores:
              description: Number of CPU cores provisioned.
              example: 8
              type: integer
            numCpuThreads:
              description: Number of CPU threads provisioned.
              example: 16
              type: integer
          type: object
        createdAt:
          description: Time in UTC at which the object was created.
          format: date-time
          type: string
        customerId:
          description: The customer application identifier.
          type: string
        displayName:
          description: A user-friendly name that identifies the virtual machine.
          example: My-Test-VM
          type: string
        folderInfo:
          description: >-
            The immediate parent folder on which this resource is hosted in the
            inventory of hypervisor-manager.
          properties:
            displayName:
              description: >-
                A user-friendly name that identifies the hypervisor folder. This
                will always be same as name since adding or updating hypervisor
                folders is not supported when managed from a manager, such as the
                vCenter.
              example: myVmFolder
              type: string
            id:
              description: UUID string uniquely identifying the hypervisor folder.
              example: 9b4c14a6-3cd5-4907-97c4-cf44c5b641e4
              type: string
            name:
              description: Name of the folder as reported by the hypervisor manager.
              example: myVmFolder
              maxLength: 255
              readOnly: true
              type: string
            resourceUri:
              description: The URI reference for this resource.
              type: string
            type:
              $ref: "#/components/schemas/CommonResourceProperties/properties/type"
          type: object
        generation:
          $ref: "#/components/schemas/CommonResourceProperties/properties/generation"
        guestInfo:
          description: Information of this guest OS running on the virtual machine.
          properties:
            buildVersion:
              description: >-
                Build version of the guest operating system on this virtual
                machine.
              example: 6.7.0 build-9030300, NT 6.3, 3.8.13-44.1.1.el6uek.x86_64
              type: string
            name:
              description: Name of the guest operating system on this virtual machine.
              example: Microsoft Windows Server 2008 R2 (64-bit)
              type: string
            releaseVersion:
              description: >-
                Release version of the guest operating system on this virtual
                machine.
              example: 6.7.0 build-9030300, R2, 7.2
              type: string
            type:
              description: Operating system on this virtual machine.
              enum:
                - WINDOWS
                - LINUX
                - OTHERS
              type: string
          type: object
        hciClusterUuid:
          description: UUID string uniquely identifying the HCI cluster.
          example: 754f63f7-1016-40ec-9b8f-610f978b9aec
          type: string
        hostInfo:
          properties:
            displayName:
              description: >-
                A user-friendly name that identifies the hypervisor host. This will
                always be same as name since adding or updating hypervisor hosts is
                not supported when managed from a manager, such as the vCenter.
              example: myESXi
              type: string
            id:
              description: UUID string uniquely identifying the hypervisor host.
              example: 9b4c14a6-3cd5-4907-97c4-cf44c5b641e4
              type: string
            name:
              description: Name of the host as reported by the hypervisor manager.
              example: myESXi
              format: hostname
              maxLength: 255
              readOnly: true
              type: string
            resourceUri:
              description: The URI reference for this resource.
              type: string
            type:
              $ref: "#/components/schemas/CommonResourceProperties/properties/type"
          type: object
        hypervisorManagerInfo:
          properties:
            displayName:
              description: User defined name for the hypervisor manager.
              example: myvcenter1
              type: string
            id:
              description: UUID string uniquely identifying the hypervisor manager.
              example: 9b4c14a6-3cd5-4907-97c4-cf44c5b641e4
              type: string
            name:
              description: Name as reported by the hypervisor manager.
              example: vcenter123.hpe.com
              format: hostname
              maxLength: 255
              type: string
            resourceUri:
              description: The URI reference for this resource.
              type: string
            type:
              $ref: "#/components/schemas/CommonResourceProperties/properties/type"
          type: object
        id:
          description: UUID string uniquely identifying the virtual machine
          example: 9b4c14a6-3cd5-4907-97c4-cf44c5b641e4
          type: string
        name:
          description: Name of the virtual machine as configured in the hypervisor manager.
          example: vm-1-windows
          maxLength: 80
          readOnly: true
          type: string
        networkAdapters:
          items:
            properties:
              macAddress:
                description: MAC address of the network adapter.
                type: string
              macAddressType:
                description: Specifies how the MAC address is provided for the adapter.
                enum:
                  - MANUAL
                  - AUTOMATIC
                type: string
              name:
                description: Name of the network adapter.
                type: string
              networkDetails:
                properties:
                  connectAtPowerOn:
                    description: Specifies if the network has to be connected at power on.
                    type: boolean
                  displayName:
                    description: >-
                      A user-friendly name that identifies the hypervisor network. This
                      will always be same as name since adding or updating hypervisor
                      networks is not supported when managed from a manager, such as the
                      vCenter.
                    example: vmNetwork
                    type: string
                  id:
                    description: UUID string uniquely identifying the hypervisor network resource.
                    example: 9b4c14a6-3cd5-4907-97c4-cf44c5b641e4
                    type: string
                  name:
                    description: Name of the network as reported by the hypervisor manager.
                    example: vmNetwork
                    maxLength: 255
                    readOnly: true
                    type: string
                  resourceUri:
                    description: The URI reference for this resource.
                    type: string
                  state:
                    description: Reflects if network is available or deleted from vCenter.
                    enum:
                      - AVAILABLE
                      - DELETED
                    type: string
                  type:
                    $ref: "#/components/schemas/CommonResourceProperties/properties/type"
                type: object
            type: object
          type: array
        networkAddress:
          description: IP address of the virtual machine.
          type: string
        powerState:
          description: This provides the information power state of the virtual machine.
          enum:
            - POWERED_ON
            - POWERED_OFF
            - SUSPENDED
            - UNKNOWN
          type: string
        protectionJobInfo:
          $ref: "#/components/schemas/DataManagementJobInfo"
        protectionPolicyAppliedAtInfo:
          $ref: "#/components/schemas/ProtectionPolicyAppliedAtInfo"
        protectionStatus:
          $ref: "#/components/schemas/protectionStatus"
        recoveryPointsExist:
          $ref: "#/components/schemas/recoveryPointsExist"
        resourceUri:
          description: The 'self' reference for this resource.
          example: /virtualization/v1beta1/virtual-machines/{vm-id}
          type: string
        services:
          $ref: "#/components/schemas/Services"
        state:
          description: The current state of the virtual machine
          enum:
            - OK
            - UNAVAILABLE
            - ERROR
            - CREATING
            - DELETING
            - UPDATING
            - REFRESHING
            - RESTORING
            - RESTORE_FAILED
            - DELETED
          example: OK
          type: string
        stateReason:
          description: Brief reason for the current state of the virtual machine
          maxLength: 255
          type: string
        status:
          description: The current status of the virtual machine.
          enum:
            - OK
            - ERROR
            - WARNING
          type: string
        type:
          $ref: "#/components/schemas/CommonResourceProperties/properties/type"
        uid:
          description: >-
            Unique identifier of the virtual machine as reported by the
            hypervisor.
          format: uuid
          type: string
        updatedAt:
          description: Time in UTC at which the object was last updated.
          format: date-time
          type: string
        vclsVm:
          description: Indicates it is a vCLS virtual machine or not.
          example: false
          type: boolean
        virtualDisks:
          description: >-
            A list of objects encapsulating information about the storage disks
            provisioned to a virtual machine
          items:
            properties:
              appInfo:
                description: Hypervisor specific information.
                properties:
                  vmware:
                    description: VMware specific app info.
                    properties:
                      datastoreInfo:
                        description: >-
                          Information of the datastore where the virtual disk is
                          residing.
                        properties:
                          displayName:
                            description: A user-friendly name that identifies the datastore.
                            example: Nimble-DS1
                            type: string
                          id:
                            description: UUID string uniquely identifying the datastore
                            example: 9b4c14a6-3cd5-4907-97c4-cf44c5b641e4
                            type: string
                          name:
                            description: Name of the datastore as reported by the hypervisor manager.
                            example: Nimble-DS2
                            format: hostname
                            maxLength: 255
                            readOnly: true
                            type: string
                          resourceUri:
                            description: The URI reference for this resource.
                            type: string
                          type:
                            $ref: "#/components/schemas/CommonResourceProperties/properties/type"
                        type: object
                      diskUuidEnabled:
                        description: >-
                          True if the disk UUID is enabled for the virtual
                          machine.
                        example: true
                        type: boolean
                      type:
                        description: >-
                          This gives information this virtual disk type. - VMFS
                          - virtual machine flat disks. - VVOL - virtual volume
                          - PRDM - physical raw disk mapping - VRDM - virtual
                          raw disk mapping
                        enum:
                          - VMFS
                          - VVOL
                          - PRDM
                          - VRDM
                        type: string
                    type: object
                type: object
              capacityInBytes:
                description: >-
                  Last known size of the virtual disk File path of the virtual
                  disk
                format: int64
                type: integer
              filePath:
                description: File path of the virtual disk
                example: NEW_VCSA6.7/NEW_VCSA6.7.vmdk
                type: string
              id:
                description: UUID for the virtual disk.
                format: uuid
                type: string
              name:
                description: Name of the virtual disk.
                example: NEW_VM_20200605155010/NEW_VM_20200605155010.vmdk
                type: string
              uid:
                description: >-
                  Unique identifier of the virtual disk as reported by the
                  hypervisor.
                format: uuid
                type: string
            type: object
          type: array
        vmClassification:
          description: Classification of different system/control VM types
          enum:
            - DATA_ORCHESTRATOR
            - PROTECTION_STORE_GATEWAY
            - VCLS_VM
            - TEMPLATE_VM
            - OMNICUBE_VM
            - DSC_VM
          type: string
        vmConfigPath:
          description: VM configuration path of the virtual machine.
          example: NEW_VCSA6.7/NEW_VCSA6.7.vmx
          type: string
        vmPerfMetricInfo:
          description: Virtual machine performance metrics.
          properties:
            averageReadLatency:
              description: Average read latency.
              format: int64
              type: integer
            averageWriteLatency:
              description: Average write latency.
              format: int64
              type: integer
            cpuAllocatedInMhz:
              description: CPU allocated in mega hertz.
              format: int64
              type: integer
            cpuUsedInMhz:
              description: CPU used in mega hertz.
              format: int64
              type: integer
            memoryAllocatedInMb:
              description: Memory allocated in mega bytes.
              format: int64
              type: integer
            memoryUsedInMb:
              description: Memory used in mega bytes.
              format: int64
              type: integer
            storageAllocatedInKb:
              description: Storage allocated in kilo bytes.
              format: int64
              type: integer
            storageUsedInBytes:
              description: Storage used in bytes.
              format: int64
              type: integer
            totalReadIops:
              description: Total read IOPS.
              format: int64
              type: integer
            totalWriteIops:
              description: Total write IOPS.
              format: int64
              type: integer
          type: object
        vmProtectionGroupsInfo:
          description: Protection groups related to the virtual machine.
          items:
            $ref: "#/components/schemas/VmProtectionGroupInfo"
          type: array
        volumesInfo:
          description: Volumes associated with this virtual machine.
          items:
            $ref: "#/components/schemas/VolumeInfo"
          type: array
      required:
        - id
        - type
        - generation
        - createdAt
        - updatedAt
      type: object
    VMRequest:
      type: object
      properties:
        requestId:
          type: string
          format: uuid
        operation:
          type: string
          enum:
            - vmDeploy
            - vmReconfigure
            - vmPowerOn
            - vmPowerOff
            - vmReset
            - vmRestart
            - vmShutdown
            - vmDelete
        requestStatus:
          type: string
          enum:
            - New
            - Inprogress
            - Success
            - Failure
        workspaceId:
          type: string
        datacenterId:
          type: string
        createdAt:
          type: string
          format: date-time
        completedAt:
          type: string
          format: date-time
          nullable: true
        requestMetadata:
          type: string
          description: JSON metadata stored as text
      required:
        - requestId
        - operation
        - requestStatus
        - createdAt
        - requestMetadata
    VMDeployInstance:
      type: object
      properties:
        requestId:
          type: string
          format: uuid
        vmId:
          type: string
        vmName:
          type: string
        vmStatus:
          type: string
        vmStateMessage:
          type: string
        completedAt:
          type: string
          format: date-time
          nullable: true
      required:
        - requestId
        - vmName
        - vmStatus
    VMRequestWithDeploy:
      type: object
      properties:
        vm_request:
          $ref: "#/components/schemas/VMRequest"
        vm_deploy_list:
          type: array
          items:
            $ref: "#/components/schemas/VMDeployInstance"
      required:
        - vm_request
        - vm_deploy_list
    VMRequestsList:
      type: object
      description: List of all the VM Requests made
      properties:
        vm-requests_list_count:
          description: Total number of vm request records returned.
          type: integer
        vm-deploy_list_count:
          description: Total number of vm deploy records returned.
          type: integer
        items:
          type: object
          properties:
            vm_requets_list:
              type: array
              items:
                $ref: "#/components/schemas/VMRequest"
            vm_deploy_list:
              type: array
              items:
                $ref: "#/components/schemas/VMDeployInstance"
      required:
        - vm_requests_list
        - vm_deploy_list
    VmProtectionGroupInfo:
      description: Information of the Virtual Machine Protection Group.
      properties:
        id:
          description: Unique identifier for the Protection Group.
          example: 1b738651-da9f-4c85-88c1-70dbfe1976681
          type: string
        name:
          description: Name of the Protection Group.
          example: myProtectionGroup
          type: string
        resourceUri:
          description: Reference to resource.
          type: string
        type:
          $ref: "#/components/schemas/CommonResourceProperties/properties/type"
      type: object
    VolumeInfo:
      description: Information of volume or snapshot.
      properties:
        displayName:
          description: A user-friendly name that identifies the volume.
          type: string
        id:
          description: UUID string uniquely identifying the volume.
          example: 6a38acc7-e470-4ed7-b141-ca9509672dac
          type: string
        name:
          description: Name of the volume.
          example: Volume1
          type: string
        resourceUri:
          description: The URI reference for this resource.
          type: string
        scsiIdentifier:
          description: SCSI identifier of the volume or snapshot .
          example: 1b738651-da9f-4c85-88c1-70dbfe1976681
          type: string
        sizeInBytes:
          description: Size of the volume or snapshot in bytes.
          example: 2407653459860
          format: int64
          type: integer
        storageFolderInfo:
          $ref: "#/components/schemas/StorageFolderInfo"
        storagePoolInfo:
          $ref: "#/components/schemas/StoragePoolInfo"
        storageSystemInfo:
          $ref: "#/components/schemas/StorageSystemInfo"
        type:
          description: Type of volume.
          type: string
        volumeSetInfo:
          $ref: "#/components/schemas/VolumeSetInfo"
      type: object
    VolumeSetInfo:
      description: Describes a volume set.
      properties:
        displayName:
          description: A user-friendly name that identifies the volume set.
          type: string
        id:
          description: UUID string uniquely identifying the volume set.
          example: 6a38acc7-e470-4ed7-b141-ca9509672dac
          type: string
        name:
          description: Name of the volume set.
          type: string
        resourceUri:
          description: The URI reference for this resource.
          type: string
        type:
          description: Type of the volume set.
          type: string
      type: object
    protectionStatus:
      description: >-
        Provides the current protection status of this resource. - UNPROTECTED -
        No policy assigned, No recovery points exists - LAPSED      - No policy
        assigned, at least one recovery points exists - PENDING     - Policy
        assigned, No recovery points exists - PARTIAL     - Policy assigned, At
        least one recovery point exists - PROTECTED   - Policy assigned, most
        recent run of every configured schedule is successful - PAUSED      -
        Policy assigned, one or more of the schedules are paused - UNSUPPORTED -
        No policy can be assigned
      enum:
        - UNPROTECTED
        - LAPSED
        - PENDING
        - PARTIAL
        - PROTECTED
        - PAUSED
        - UNSUPPORTED
      example: PROTECTED
      type: string
    recoveryPointsExist:
      description: Indicates at least one valid recovery point exists for this resource.
      example: true
      type: boolean
  securitySchemes:
    bearer:
      bearerFormat: JWT
      description: >
        The Data Service Cloud Console API uses a JWT bearer token for
        authentication.

        An authentication token can be obtained from the HPE GreenLake console.
      scheme: bearer
      type: http
