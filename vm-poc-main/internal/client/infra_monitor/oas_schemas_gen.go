// Code generated by ogen, DO NOT EDIT.

package client

type Bearer struct {
	Token string
	Roles []string
}

// GetToken returns the value of Token.
func (s *Bearer) GetToken() string {
	return s.Token
}

// GetRoles returns the value of Roles.
func (s *Bearer) GetRoles() []string {
	return s.Roles
}

// SetToken sets the value of Token.
func (s *Bearer) SetToken(val string) {
	s.Token = val
}

// SetRoles sets the value of Roles.
func (s *Bearer) SetRoles(val []string) {
	s.Roles = val
}

// Ref: #/components/schemas/HypervisorCluster
type HypervisorCluster struct {
	ClusterName           string `json:"clusterName"`
	ClusterType           string `json:"clusterType"`
	HypervisorHosts       int    `json:"hypervisorHosts"`
	HypervisorManagerInfo string `json:"hypervisorManagerInfo"`
	Status                string `json:"status"`
}

// GetClusterName returns the value of ClusterName.
func (s *HypervisorCluster) GetClusterName() string {
	return s.ClusterName
}

// GetClusterType returns the value of ClusterType.
func (s *HypervisorCluster) GetClusterType() string {
	return s.ClusterType
}

// GetHypervisorHosts returns the value of HypervisorHosts.
func (s *HypervisorCluster) GetHypervisorHosts() int {
	return s.HypervisorHosts
}

// GetHypervisorManagerInfo returns the value of HypervisorManagerInfo.
func (s *HypervisorCluster) GetHypervisorManagerInfo() string {
	return s.HypervisorManagerInfo
}

// GetStatus returns the value of Status.
func (s *HypervisorCluster) GetStatus() string {
	return s.Status
}

// SetClusterName sets the value of ClusterName.
func (s *HypervisorCluster) SetClusterName(val string) {
	s.ClusterName = val
}

// SetClusterType sets the value of ClusterType.
func (s *HypervisorCluster) SetClusterType(val string) {
	s.ClusterType = val
}

// SetHypervisorHosts sets the value of HypervisorHosts.
func (s *HypervisorCluster) SetHypervisorHosts(val int) {
	s.HypervisorHosts = val
}

// SetHypervisorManagerInfo sets the value of HypervisorManagerInfo.
func (s *HypervisorCluster) SetHypervisorManagerInfo(val string) {
	s.HypervisorManagerInfo = val
}

// SetStatus sets the value of Status.
func (s *HypervisorCluster) SetStatus(val string) {
	s.Status = val
}

// Ref: #/components/schemas/HypervisorHost
type HypervisorHost struct {
	HostMetricsInfo       HypervisorHostHostMetricsInfo `json:"hostMetricsInfo"`
	HostName              string                        `json:"hostName"`
	HostType              string                        `json:"hostType"`
	HypervisorClusterInfo string                        `json:"hypervisorClusterInfo"`
	HypervisorManagerInfo string                        `json:"hypervisorManagerInfo"`
	NetworkAddress        OptNilString                  `json:"networkAddress"`
	NetworkInfo           string                        `json:"networkInfo"`
	Status                string                        `json:"status"`
}

// GetHostMetricsInfo returns the value of HostMetricsInfo.
func (s *HypervisorHost) GetHostMetricsInfo() HypervisorHostHostMetricsInfo {
	return s.HostMetricsInfo
}

// GetHostName returns the value of HostName.
func (s *HypervisorHost) GetHostName() string {
	return s.HostName
}

// GetHostType returns the value of HostType.
func (s *HypervisorHost) GetHostType() string {
	return s.HostType
}

// GetHypervisorClusterInfo returns the value of HypervisorClusterInfo.
func (s *HypervisorHost) GetHypervisorClusterInfo() string {
	return s.HypervisorClusterInfo
}

// GetHypervisorManagerInfo returns the value of HypervisorManagerInfo.
func (s *HypervisorHost) GetHypervisorManagerInfo() string {
	return s.HypervisorManagerInfo
}

// GetNetworkAddress returns the value of NetworkAddress.
func (s *HypervisorHost) GetNetworkAddress() OptNilString {
	return s.NetworkAddress
}

// GetNetworkInfo returns the value of NetworkInfo.
func (s *HypervisorHost) GetNetworkInfo() string {
	return s.NetworkInfo
}

// GetStatus returns the value of Status.
func (s *HypervisorHost) GetStatus() string {
	return s.Status
}

// SetHostMetricsInfo sets the value of HostMetricsInfo.
func (s *HypervisorHost) SetHostMetricsInfo(val HypervisorHostHostMetricsInfo) {
	s.HostMetricsInfo = val
}

// SetHostName sets the value of HostName.
func (s *HypervisorHost) SetHostName(val string) {
	s.HostName = val
}

// SetHostType sets the value of HostType.
func (s *HypervisorHost) SetHostType(val string) {
	s.HostType = val
}

// SetHypervisorClusterInfo sets the value of HypervisorClusterInfo.
func (s *HypervisorHost) SetHypervisorClusterInfo(val string) {
	s.HypervisorClusterInfo = val
}

// SetHypervisorManagerInfo sets the value of HypervisorManagerInfo.
func (s *HypervisorHost) SetHypervisorManagerInfo(val string) {
	s.HypervisorManagerInfo = val
}

// SetNetworkAddress sets the value of NetworkAddress.
func (s *HypervisorHost) SetNetworkAddress(val OptNilString) {
	s.NetworkAddress = val
}

// SetNetworkInfo sets the value of NetworkInfo.
func (s *HypervisorHost) SetNetworkInfo(val string) {
	s.NetworkInfo = val
}

// SetStatus sets the value of Status.
func (s *HypervisorHost) SetStatus(val string) {
	s.Status = val
}

type HypervisorHostHostMetricsInfo struct {
	CpuUsage OptFloat32 `json:"cpuUsage"`
	MemUsage OptFloat32 `json:"memUsage"`
}

// GetCpuUsage returns the value of CpuUsage.
func (s *HypervisorHostHostMetricsInfo) GetCpuUsage() OptFloat32 {
	return s.CpuUsage
}

// GetMemUsage returns the value of MemUsage.
func (s *HypervisorHostHostMetricsInfo) GetMemUsage() OptFloat32 {
	return s.MemUsage
}

// SetCpuUsage sets the value of CpuUsage.
func (s *HypervisorHostHostMetricsInfo) SetCpuUsage(val OptFloat32) {
	s.CpuUsage = val
}

// SetMemUsage sets the value of MemUsage.
func (s *HypervisorHostHostMetricsInfo) SetMemUsage(val OptFloat32) {
	s.MemUsage = val
}

// NewOptFloat32 returns new OptFloat32 with value set to v.
func NewOptFloat32(v float32) OptFloat32 {
	return OptFloat32{
		Value: v,
		Set:   true,
	}
}

// OptFloat32 is optional float32.
type OptFloat32 struct {
	Value float32
	Set   bool
}

// IsSet returns true if OptFloat32 was set.
func (o OptFloat32) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptFloat32) Reset() {
	var v float32
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptFloat32) SetTo(v float32) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptFloat32) Get() (v float32, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptFloat32) Or(d float32) float32 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilString returns new OptNilString with value set to v.
func NewOptNilString(v string) OptNilString {
	return OptNilString{
		Value: v,
		Set:   true,
	}
}

// OptNilString is optional nullable string.
type OptNilString struct {
	Value string
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilString was set.
func (o OptNilString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilString) Reset() {
	var v string
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilString) SetTo(v string) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o OptNilString) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *OptNilString) SetToNull() {
	o.Set = true
	o.Null = true
	var v string
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilString) Get() (v string, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}
